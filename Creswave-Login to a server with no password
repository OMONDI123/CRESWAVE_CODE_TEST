SERVEER CRESWAVE CREDENTIALS




SWIFT FOOD SERVER  
Install PuTTY Tools (if not already installed):
If you haven't installed PuTTY Tools on your Ubuntu server, you can do so by running:
///////////////////////////////////////////////////SETTING UP SERVERKEY.PPK TO PUTTY GEN//////////////////////////////////////////////
bash
Copy code
--sudo apt update
--sudo apt install putty-tools
Convert .ppk to OpenSSH Format:
Once PuTTY Tools are installed, use the puttygen command to convert your .ppk private key to an OpenSSH-compatible format (e.g., .pem or .rsa). Replace swiftloanwhatsapp.ppk with the actual name of your .ppk file:

bash
Copy code
--puttygen /home/austine/Creswave-Projects/swiftloanwhatsapp.ppk -O private-openssh -o /home/austine/Creswave-Projects/swiftloanwhatsapp.pem
Change Permissions (if needed):
After conversion, make sure the permissions of your .pem or .rsa private key file are secure (e.g., readable and writable only by the owner):

bash
Copy code
--chmod 600 /home/austine/Creswave-Projects/swiftloanwhatsapp.pem
Use OpenSSH-Compatible Key:
Now, you can use the converted key (swiftloanwhatsapp.pem in this example) to SSH into the CentOS server:

bash
Copy code
--ssh -i /home/austine/Creswave-Projects/swiftloanwhatsapp.pem centos@3.17.0.57
By converting your PuTTY .ppk private key to an OpenSSH-compatible format, you should be able to SSH into the CentOS server without encountering the "invalid format" error.

Transfer from machine to server
scp -i /home/austine/Creswave-Projects/swiftloanwhatsapp.pem ~/Downloads/example.txt centos@3.17.0.57:/home/centos/files/

scp -i /home/austine/Creswave-Projects/swiftloanwhatsapp.pem swiftfood.war  centos@3.17.0.57:/opt/Tomcat/apache-tomcat-9.0.73/webapps/


Transfer from server to machine

scp -i /home/austine/Creswave-Projects/swiftfoodapps.pem centos@3.17.0.57:/opt/SWIFTSYNC/ /home/austine/Creswave-Projects/

Searching for a file 

find / *SWIFTSYNC* -print
///////CHANGING THE DEFAULT APACHE PORT////////////////////////

Locate the server.xml file:

The server.xml file is typically located in the conf directory of your Tomcat installation. For example, if Tomcat is installed in /opt/tomcat9, the server.xml file would be in /opt/tomcat9/conf/server.xml.
Edit the server.xml file:

Open the server.xml file in a text editor with sudo privileges. For example, using nano:
sh
Copy code
sudo nano /opt/tomcat9/conf/server.xml

sudo nano /opt/Tomcat/apache-tomcat-9.0.89/conf/server.xml
Find the Connector element:

Look for the following line, which defines the HTTP/1.1 Connector on port 8080:
xml
Copy code
<Connector port="8080" protocol="HTTP/1.1"
           connectionTimeout="20000"
           redirectPort="8443" />
Change the port number:

Change the port attribute from 8080 to 8181:
xml
Copy code
<Connector port="8181" protocol="HTTP/1.1"
           connectionTimeout="20000"
           redirectPort="8443" />
Save and close the file:

Save the changes and close the editor. If you're using nano, you can do this by pressing CTRL + O to save and CTRL + X to exit.
Restart Tomcat:

Restart the Tomcat server for the changes to take effect. You can do this by running:
sh
Copy code
sudo /opt/tomcat9/bin/shutdown.sh
sudo /opt/tomcat9/bin/startup.sh
After completing these steps, Tomcat should be running on port 8181. You can verify this by accessing http://your-server-ip:8181 in a web browser.


/////////////////////////////////INSTALLING AND SETTING UP MYSQL SERVER AND PHPMYADMIN IN A SERVER//////////////////////////////////

sudo apt update

Then, install Apache with:

sudo apt install apache2

sudo ufw app list
sudo ufw allow in "Apache"
sudo ufw status
sudo ufw enable
sudo ufw status
sudo apt install mysql-server
sudo mysql
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'creswave@#2023';

Install PHP
sudo apt install php libapache2-mod-php php-mysql
php -v
sudo nano /etc/apache2/mods-enabled/dir.conf

<IfModule mod_dir.c>
    DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm
</IfModule>

sudo systemctl restart apache2
sudo systemctl status apache2

INSTALLING SECURE PHPMYADMIN
sudo apt install phpmyadmin php-mbstring
sudo systemctl restart apache2

//////////////////////////////////////////SETTING UP JAVA IN UBUNTU SERVER////////////////////////////////////////////////

cd /path/to/your/downloaded/file
sudo mkdir -p /usr/lib/jvm
sudo tar -zxvf jdk-8u201-linux-x64.tar.gz -C /usr/lib/jvm
cd /usr/lib/jvm
sudo mv jdk1.8.0_201 java-8-oracle
sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-8-oracle/bin/java 1
sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/java-8-oracle/bin/javac 1
sudo update-alternatives --config java
sudo update-alternatives --config javac
sudo nano /etc/environment
JAVA_HOME="/usr/lib/jvm/java-8-oracle"
source /etc/environment
java -version
javac -version


////////SWIFTAPPS/SWIFTFOOD SERVER CREDENTIALS////////////

--ssh -i /home/austine/Creswave-Projects/swiftfoodapps.pem root@139.59.197.107
mysql root password========creswave@#2023

SCP FILE FROM MACHINE TO THE SERVER 
scp -i /home/austine/Creswave-Projects/swiftfoodapps.pem jdk-8u201-linux-x64.tar.gz   root@139.59.197.107:


/////////DEMO SERVER CREDENTIALS ///////////////

--ssh -i /home/austine/Creswave-Projects/epay.pem ubuntu@3.17.240.215
--ssh -i /home/austine/Creswave-Projects/epay.pem ubuntu@demo.ecare.africa
sh /opt/Tomcat/apache-tomcat-8.5.47/bin/shutdown.sh
 rm -r /opt/Tomcat/apache-tomcat-8.5.47/webapps/demoecarehmis
rm -r /opt/Tomcat/apache-tomcat-8.5.47/webapps/demoecarehmis.war
scp -i /home/austine/Creswave-Projects/epay.pem demoecarehmis.war ubuntu@demo.ecare.africa:/opt/Tomcat/apache-tomcat-8.5.47/webapps/

sh /opt/Tomcat/apache-tomcat-8.5.47/bin/startup.sh

tail -f /opt/Tomcat/apache-tomcat-8.5.47/logs/catalina.out

ls /opt/Tomcat/apache-tomcat-8.5.47/webapps/

///////COPY FILE FROM SERVER TO MY MACHINE///////////////
scp -i /home/austine/Creswave-Projects/epay.pem ubuntu@demo.ecare.africa:/home/ubuntu/demobackup.sql /home/austine/


/////////JENKTINS SERVER CREDENTIALS//////////////

server ip-----159.223.244.173
server username------root
--ssh -i /home/austine/Creswave-Projects/swiftfoodapps.pem root@159.223.244.173
COPY FILE FROM THE MACHINE TO THE SERVER
---scp -i /home/austine/Creswave-Projects/swiftfoodapps.pem jdk-8u201-linux-x64.tar.gz   root@159.223.244.173:/home/root


/////////////////MAKUENI BACKUP SERVER//////////////////////////////////////

server ip -------------------15.184.116.37
server username---------------- ubuntu
/////PROJECT DEPLOYMENT INTO THIS SERVER/////////////
------ssh -i /home/austine/Creswave-Projects/makuenibackup.pem ubuntu@15.184.116.37

sh /opt/Tomcat/apache-tomcat-9.0.89/bin/shutdown.sh
 rm -r /opt/Tomcat/apache-tomcat-9.0.89/webapps/demoecarehmis
rm -r /opt/Tomcat/apache-tomcat-9.0.89/webapps/demoecarehmis.war
scp -i /home/austine/Creswave-Projects/makuenibackup.pem demoecarehmis.war ubuntu@15.184.116.37:/opt/Tomcat/apache-tomcat-9.0.89/webapps/

sh /opt/Tomcat/apache-tomcat-8.5.47/bin/startup.sh

tail -f /opt/Tomcat/apache-tomcat-8.5.47/logs/catalina.out

ls /opt/Tomcat/apache-tomcat-8.5.47/webapps/

COPY FILE FROM THE MACHINE TO THE SERVER

scp -i /home/austine/Creswave-Projects/makuenibackup.pem jdk-8u201-linux-x64.tar.gz   ubuntu@15.184.116.37:/home/ubuntu



EXTRACTING .tar.gz file (SETTING UP MANUALLY DOWNLOADED JAVA)
tar -xvzf jdk-7u80-linux-x64.tar.gz

sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk1.7.0_80/bin/java 1
sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/jdk1.7.0_80/bin/javac 1

Setting the default java version
sudo update-alternatives --config java


mysqldump -u ecaredemobarika -p demo_barika_db > ecaredemo.sql











